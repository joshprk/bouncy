#!/bin/bash
# Config
# Window size
CONFIG_X=30
CONFIG_Y=10

# Internal variables
POS_X=0
POS_Y=0
VEL_X=1
VEL_Y=1

# Functions
# Cleanup
cleanup () {
    reset_cursor_pos $POS_X $POS_Y
    printf "\n\n"
    for i in $(seq 1 $(($CONFIG_Y + 1)))
    do
        printf "\r"
        for i in $(seq 1 $(tput cols))
        do
            printf "\040"
        done
        printf "\r\033[1A"
    done
};

# Renders window border
render_border () {
    INNER_X_RANGE=$(($CONFIG_X - 2))
    INNER_Y_RANGE=$(($CONFIG_Y - 2))
    EMPTY="$(printf '%*s' $INNER_X_RANGE)"

    print_x_border() {
        X_BORDER_RANGE=$(seq 1 $INNER_X_RANGE)
        printf "+"
        printf "\055%.0s" $X_BORDER_RANGE
        printf "+\n"
    };

    print_x_border
    for ((i = 0; i < $INNER_Y_RANGE; i++))
    do  
        printf "|"
        printf "$EMPTY"
        printf "|\n"
    done
    print_x_border
};

# Sets the cursor at (X=$1, Y=$2)
set_cursor_at () {
    printf "\r| "
    for ((y = 0; y < $2; y++))
    do
        printf "\033[1A"
    done
    for ((x = 0; x < $1; x++))
    do
        printf "\040"
    done
};

# Inverse of set_cursor_at for (X=$1, Y=$2)
reset_cursor_pos () {
    for ((y = 0; y < $2; y++))
    do
        printf "\n"
    done
    printf "\r| "
};

# Update ball location for next frame
update () {
    X=$(($POS_X + $VEL_X))
    Y=$(($POS_Y + $VEL_Y))
    
    if ((X > ($CONFIG_X - 2) - 2)) || ((X < 0))
    then
        VEL_X=$((-VEL_X))
        X=$(($POS_X + $VEL_X))
    fi

    if ((Y > ($CONFIG_Y - 2) - 1)) || ((Y < 0))
    then
        VEL_Y=$((-VEL_Y))
        Y=$(($POS_Y + $VEL_Y))
    fi

    POS_X=$X
    POS_Y=$Y
};

# Disable terminal cursor
#printf \"\n\n\"; cleanup; 
trap "cleanup; tput cnorm; stty echo" EXIT
tput civis
stty -echo

# Calls function to render window border
render_border

# Puts cursor at (0, 0) relative to border
printf "\033[1A""\033[1A"

# Main loop
while true
do  
    set_cursor_at $POS_X $POS_Y
    printf "O"
    sleep .1
    printf "\r|"
    printf '%*s' $(($CONFIG_X - 2))
    printf "|"
    reset_cursor_pos $POS_X $POS_Y
    update
done